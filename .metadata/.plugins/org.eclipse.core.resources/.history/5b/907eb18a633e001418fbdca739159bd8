//  -------------   JOGL SampleProgram  (Fadenkreuz) ------------
import javax.media.opengl.*;

import java.awt.*;
import java.awt.event.*;

import javax.media.opengl.awt.GLCanvas;

import com.jogamp.opengl.util.FPSAnimator;

public class MyFirst
       implements WindowListener, GLEventListener
{
	private GLCanvas canvas;

     //  ------------------  Methoden  --------------------

     void zeichneAchsen(GL2 gl)                                  // Koordinatenachsen zeichnen
     {  gl.glBegin(GL2.GL_LINES);
        gl.glVertex2d(-1,0);        // x-Achse
        gl.glVertex2d(1,0);
        gl.glVertex2d(0,-1);        // y-Achse
        gl.glVertex2d(0,1);
        gl.glEnd();
     }


     void zeichneKreis(GL2 gl, double r)                         // Kreis um den Nullpunkt
     {  int nPkte = 40;                                          // Anzahl Punkte
        double dt = 2.0*Math.PI / nPkte;                         // Parameter-Schrittweite
        gl.glBegin(GL2.GL_POLYGON);
        for (int i=0; i < nPkte; i++)
          gl.glVertex2d(r*Math.cos(i*dt),                         // x = r*cos(i*dt)
                        r*Math.sin(i*dt));                        // y = r*sin(i*dt-phi)
        gl.glEnd();
     }


     public MyFirst()                                             // Konstruktor
     {  Frame f = new Frame("MyFirst");
        f.setSize(800, 600);
        f.addWindowListener(this);
        canvas = new GLCanvas();                         // OpenGL-Window
        canvas.addGLEventListener(this);
        f.add(canvas);
        f.setVisible(true);
     }


     public static void main(String[] args)                     // main-Methode der Applikation
     {  new MyFirst();
     }


     //  ---------  OpenGL-Events  -----------------------

     public void init(GLAutoDrawable drawable)
     {  GL gl0 = drawable.getGL();                               // OpenGL-Objekt
        GL2 gl = gl0.getGL2();
        gl.glClearColor(0.0f, 0.0f, 1.0f, 1.0f);                // erasing color
        gl.glPolygonMode(GL2.GL_FRONT_AND_BACK, GL2.GL_LINE);
        FPSAnimator anim = new FPSAnimator(canvas, 200, true);
        anim.start();
     }


     public void display(GLAutoDrawable drawable)
     {  
    	GL gl0 = drawable.getGL();
        GL2 gl = gl0.getGL2();
        gl.glClear(GL2.GL_COLOR_BUFFER_BIT);                     // Bild loeschen
        gl.glColor3d(0.5,0.5,0.5);                                    // Zeichenfarbe
        zeichneAchsen(gl);
        gl.glColor3d(1, 1, 1);                                  // Zeichenfarbe
        zeichneKreis(gl,0.4);
        gl.glColor3d(1, 1, 0);
        zeichneKreis(gl,0.05,0.5,0);
     }


     public void reshape(GLAutoDrawable drawable,               // Window resized
                         int x, int y,
                         int width, int height)
     {  GL gl0 = drawable.getGL();
        GL2 gl = gl0.getGL2();
        gl.glViewport(0, 0, width, height);                     // Window
        double aspect = (double)height/width;
        double left=-1, right=1;
        double bottom=aspect*left, top=aspect*right;
        double near=-100, far=100;
        gl.glMatrixMode(GL2.GL_PROJECTION);
        gl.glLoadIdentity();
        gl.glOrtho(left,right,bottom,top,near,far);             // ViewingVolume
     }


     public void dispose(GLAutoDrawable drawable)
     { }


     //  ---------  Window-Events  --------------------

     public void windowClosing(WindowEvent e)
     {  System.exit(0);
     }
     public void windowActivated(WindowEvent e) {  }
     public void windowClosed(WindowEvent e) {  }
     public void windowDeactivated(WindowEvent e) {  }
     public void windowDeiconified(WindowEvent e) {  }
     public void windowIconified(WindowEvent e) {  }
     public void windowOpened(WindowEvent e) {  }

  }
